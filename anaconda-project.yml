# Copyright (c) 2020 University System of Georgia and GTCOARLab Contributors
# Distributed under the terms of the BSD-3-Clause License

name: gt-coar-lab

variables:
  INSTALLER_VERSION: 2020.6.0
  SAFETY_DB_URL:
    default: https://github.com/pyupio/safety-db/archive/master.tar.gz
    description: URL of safety-db tarball, since the pypi version lags
  SAFETY_IGNORE_IDS:
    default: >-
      38038 37776 38039
    description: >
      - 38038, 37776, 38039
        These are tensorflow issues: hard to upgrade right now

commands:
  postBuild:
    description: perform post-install steps, as on binder
    unix: python binder/postBuild
    env_spec: _binder

  lab:
    description: try out the interactive experience (needs postBuild)
    unix: jupyter lab --no-browser --debug
    env_spec: _binder

  build:
    description: build the installer
    unix: &build python -m scripts.build
    windows: *build
    env_spec: build

  atest:
    description: test the installer
    unix: &atest python -m scripts.atest
    windows: *atest
    env_spec: qa

  lint:
    description: lint the project
    unix: &lint python -m scripts.lint
    windows: *lint
    env_spec: qa

  integrity:
    description: test repo integrity
    unix: &integrity python -m scripts.integrity
    windows: *integrity
    env_spec: qa

  audit:
    description: audit dependencies
    unix: &audit python scripts/audit.py
    windows: *audit
    env_spec: audit

  yarn:
    description: just yarn, but in the right env
    unix: yarn
    windows: yarn
    env_spec: qa

  demo:
    description: reproduce installer in demo env
    unix: &demo python -m scripts.demo
    windows: *demo
    env_spec: _demo

  demo:list:
    description: list stuff in demo
    unix: &demolist gt-coar-labextension list
    windows: *demolist
    env_spec: _demo

  demo:lab:
    description: run demo lab
    unix: &demolab gt-coar-lab --no-browser --debug
    windows: *demolab
    env_spec: _demo

  binder:
    description: refresh binder assets
    unix: &binder python -m scripts.binder
    windows: *binder
    env_spec: qa

env_specs:
  audit:
    description: minimal environment for running safety audit. only unlocked env.
    platforms:
      - linux-64
    inherit_from:
      - _py
    channels:
      - https://repo.anaconda.com/pkgs/main
      - https://conda.anaconda.org/conda-forge
    packages:
      - safety >=1.9

  qa:
    platforms:
      - linux-64
      - osx-64
      - win-64
    inherit_from:
      - _py
      - _node
      - _yarn
      - _robot
    channels:
      - https://repo.anaconda.com/pkgs/main
      - https://conda.anaconda.org/conda-forge
    packages:
      - black
      - flake8
      - isort
      - nbformat
      - pytest
      - robotframework-lint >=1.1
      - yamllint

  build:
    platforms:
      - linux-64
      - osx-64
      - win-64
    inherit_from:
      - _py
      - _conda
    channels:
      - https://repo.anaconda.com/pkgs/main
      - https://conda.anaconda.org/conda-forge
      - https://repo.anaconda.com/pkgs/msys2
    packages:
      - jinja2
      - pillow

  # these become installers
  gt-coar-lab-linux:
    platforms:
      - linux-64
    inherit_from:
      - _unix
    channels:
      - https://repo.anaconda.com/pkgs/main
      - https://conda.anaconda.org/conda-forge
    packages:
      - pyvirtualdisplay

  gt-coar-lab-macosx:
    platforms:
      - osx-64
    inherit_from:
      - _unix
    channels:
      - https://repo.anaconda.com/pkgs/main
      - https://conda.anaconda.org/conda-forge
    packages:
      - python.app

  gt-coar-lab-windows:
    platforms:
      - win-64
    inherit_from:
      - _core
    channels:
      - https://repo.anaconda.com/pkgs/main
      - https://conda.anaconda.org/conda-forge
      - https://repo.anaconda.com/pkgs/msys2

  # these are for inheritance/testing only and are not locked
  _binder:
    inherit_from:
      - gt-coar-lab-linux

  _conda:
    packages:
      - conda >=4.8.3,<4.9.0a0
      - conda-build >=3.11,<3.18.0a0
      - conda-verify
      - constructor >=3.0.2,<3.1.0a0
      - git
      - ripgrep

  _core:
    description: >
      the core dependencies. include only lowest-common-denominator packages here
    inherit_from:
      - _py
      - _node
      - _lab
      - _conda
      - _robot
    packages:
      # gym and friends
      - gym
      - gym-box2d
      # interactive computing extensions
      - jupyterlab-git
      - dask_labextension
      - importnb
      - jupyter_bokeh
      # numerical compute
      - numpy
      - pandas
      # differentiable compute
      - dask
      - distributed
      - pytorch-cpu
      - tensorflow
      # interactive visualization
      - datashader
      - hvplot
      - ipywidgets
      - python-graphviz
      - ipycytoscape
      - py2cytoscape
      # computer algebra
      - antlr-python-runtime >=4.7,<4.8
      - sympy
      # network manipulation
      - networkx
      # benchmarking
      - asv
      # computer vision
      - py-opencv
      - scikit-image
      # software distribution pipeline
      - conda-pack
      # testing
      - pytest
      - pytest-asyncio
      # headless rendering
      - pyopengl
      - pyopengl-accelerate

  _demo:
    inherit_from:
      - _core

  _lab:
    packages:
      - jupyterlab ==2.1.5
      - jupyterlab_server ==1.1.5
      - ipython >=7.15.0
      - ipykernel >=5.3.0

  _node:
    packages:
      - nodejs >=12,<13.0.0a0

  _py:
    packages:
      - python >=3.7,<3.8.0a0

  _robot:
    description: plain-english automation and acceptance testing
    packages:
      - firefox =68
      - robotframework
      - robotframework-seleniumlibrary
      - geckodriver

  _unix:
    inherit_from:
      - _core
    packages:
      - gym-atari

  _yarn:
    packages:
      - yarn >=1,<2.0.0a0
