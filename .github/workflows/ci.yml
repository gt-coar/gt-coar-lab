# Copyright (c) 2021 University System of Georgia and GTCOARLab Contributors
# Distributed under the terms of the BSD-3-Clause License

# yamllint disable rule:truthy rule:line-length rule:comments-indentation

name: CI

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  MAMBA_NO_BANNER: 1
  # our stuff
  ATEST_RETRIES: 1
  CACHE_EPOCH: 0

defaults:
  run:
    shell: bash -l {0}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: |
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-lint-${{ hashFiles('locks/ci-linux-64.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-lint-
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-

      - uses: conda-incubator/setup-miniconda@master
        with:
          condarc-file: .github/.condarc
          environment-file: locks/ci-linux-64.conda.lock
          miniforge-variant: Mambaforge
          miniforge-version: latest

      - name: cache (yarn)
        uses: actions/cache@v1
        with:
          path: _scripts/.yarn-packages
          key: |
            ${{ env.CACHE_EPOCH }}-yarn-${{ runner.os }}-${{ hashFiles('_scripts/yarn.lock', '_scripts/.yarnrc') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-yarn-${{ runner.os }}-
            ${{ env.CACHE_EPOCH }}-yarn-

      - run: doit list --all --status

      - run: doit lint || doit lint || doit lint

      - if: always()
        run: doit list --all --status

  build-cpu-linux-64:
    name: build cpu-linux-64
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: |
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-build-cpu-linux-64-${{ hashFiles('locks/ci-linux-64.conda.lock', 'locks/cpu-linux-64.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-build-cpu-linux-64-
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-

      - uses: conda-incubator/setup-miniconda@master
        with:
          condarc-file: .github/.condarc
          environment-file: locks/ci-linux-64.conda.lock
          miniforge-variant: Mambaforge
          miniforge-version: latest

      - run: doit list --all --status

      - run: doit -s build:cpu:linux-64

      - if: always()
        run: doit list --all --status

      - name: publish dists
        uses: actions/upload-artifact@v2
        with:
          name: cpu-linux-64 ${{ github.run_number }}
          path: ./dist

  build-cpu-osx-64:
    name: build cpu-osx-64
    runs-on: macos-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: |
            ${{ env.CACHE_EPOCH }}-macos-latest-conda-build-cpu-osx-64-${{ hashFiles('locks/ci-osx-64.conda.lock', 'locks/cpu-osx-64.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-macos-latest-conda-build-cpu-osx-64-
            ${{ env.CACHE_EPOCH }}-macos-latest-conda-

      - uses: conda-incubator/setup-miniconda@master
        with:
          condarc-file: .github/.condarc
          environment-file: locks/ci-osx-64.conda.lock
          miniforge-variant: Mambaforge
          miniforge-version: latest

      - run: doit list --all --status

      - run: doit -s build:cpu:osx-64

      - if: always()
        run: doit list --all --status

      - name: publish dists
        uses: actions/upload-artifact@v2
        with:
          name: cpu-osx-64 ${{ github.run_number }}
          path: ./dist

  build-cpu-win-64:
    name: build cpu-win-64
    runs-on: windows-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: |
            ${{ env.CACHE_EPOCH }}-windows-latest-conda-build-cpu-win-64-${{ hashFiles('locks/ci-win-64.conda.lock', 'locks/cpu-win-64.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-windows-latest-conda-build-cpu-win-64-
            ${{ env.CACHE_EPOCH }}-windows-latest-conda-

      - uses: conda-incubator/setup-miniconda@master
        with:
          condarc-file: .github/.condarc
          environment-file: locks/ci-win-64.conda.lock
          miniforge-variant: Mambaforge
          miniforge-version: latest

      - run: doit list --all --status

      - run: doit -s build:cpu:win-64

      - if: always()
        run: doit list --all --status

      - name: publish dists
        uses: actions/upload-artifact@v2
        with:
          name: cpu-win-64 ${{ github.run_number }}
          path: ./dist

  build-gpu-linux-64:
    name: build gpu-linux-64
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - uses: actions/checkout@v2

      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: |
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-build-gpu-linux-64-${{ hashFiles('locks/ci-linux-64.conda.lock', 'locks/gpu-linux-64.conda.lock') }}
          restore-keys: |
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-build-gpu-linux-64-
            ${{ env.CACHE_EPOCH }}-ubuntu-20.04-conda-

      - uses: conda-incubator/setup-miniconda@master
        with:
          condarc-file: .github/.condarc
          environment-file: locks/ci-linux-64.conda.lock
          miniforge-variant: Mambaforge
          miniforge-version: latest

      - run: doit list --all --status

      - run: doit -s build:gpu:linux-64

      - if: always()
        run: doit list --all --status

      - name: publish dists
        uses: actions/upload-artifact@v2
        with:
          name: gpu-linux-64 ${{ github.run_number }}
          path: ./dist
